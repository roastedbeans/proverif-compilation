digraph {
graph [ordering = out]
edge [arrowhead = none, penwidth = 1.6, fontsize = 30]
node [shape = point, width = 0, height = 0, fontsize = 30]
Trace<br/>
[label = <A trace has been found.<br/>
>, shape = plaintext]
P0__0 [label = "Honest Process", shape = plaintext]
P__0 [label = "Attacker", shape = plaintext]
Trace -> P0__0 [label = "", style = invisible, weight = 100]{rank = same; P0__0 P__0}
P0__0 -> P0__1 [label = <>, weight = 100]
P0__1 -> P0__2 [label = <>, weight = 100]
P0__2 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{1}</FONT><FONT COLOR="blue">new </FONT>idHN_3</TD></TR></TABLE>>]
P0__2 -> P0__3 [label = <>, weight = 100]
P0__3 -> P0__4 [label = <>, weight = 100]
P__0 -> P__1 [label = <>, weight = 100]
{rank = same; P__1 P0__4}
P0__4 -> P0__5 [label = <>, weight = 100]
P__1 -> P__2 [label = <>, weight = 100]
{rank = same; P__2 P0__5}
P0__5 -> P__2 [label = <~M = pk(skHN)>, arrowhead = normal]
P0__5 -> P0__6 [label = <>, weight = 100]
P__2 -> P__3 [label = <>, weight = 100]
{rank = same; P__3 P0__6}
/*RPar */
P0__6 -> P0_3__6 [label = <>]
P0__6 -> P0_2__6 [label = <>]
P0__6 -> P0_1__6 [label = <>]
P0__6 -> P0_0__6 [label = <>]
P0__6 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
{rank = same; P0_0__6 P0_1__6 P0_2__6 P0_3__6}
P0_1__6 [label = "!", shape = ellipse]
P0_1_0__6 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
P0_1__6 -> P0_1_0__6 [label = <>, weight = 100]
P0_1_0__6 -> P0_1_0__7 [label = <>, weight = 100]
P0_1_0__7 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD>Beginning of process <FONT COLOR="darkgreen">HN</FONT></TD></TR></TABLE>>]
P0_1_0__7 -> P0_1_0__8 [label = <>, weight = 100]
P0_2__6 [label = "!", shape = ellipse]
P0_2_0__6 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
P0_2__6 -> P0_2_0__6 [label = <>, weight = 100]
P0_2_0__6 -> P0_2_0__7 [label = <>, weight = 100]
P0_2_0__7 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD>Beginning of process <FONT COLOR="darkgreen">SN</FONT></TD></TR></TABLE>>]
P0_2_0__7 -> P0_2_0__8 [label = <>, weight = 100]
P0_3__6 [label = "!", shape = ellipse]
P0_3_0__6 [label = "", fixedsize = false, width = 0, height = 0, shape = none]
P0_3__6 -> P0_3_0__6 [label = <>, weight = 100]
P0_3_0__6 -> P0_3_0__7 [label = <>, weight = 100]
P0_3_0__7 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD>Beginning of process <FONT COLOR="darkgreen">UE</FONT></TD></TR><TR><TD><FONT COLOR="darkgreen">{9}</FONT><FONT COLOR="blue">new </FONT>rUE_2</TD></TR><TR><TD><FONT COLOR="darkgreen">{12}</FONT><FONT COLOR="blue">new </FONT>skUE_2</TD></TR><TR><TD><FONT COLOR="darkgreen">{16}</FONT><FONT COLOR="blue">event</FONT> UESendReqSN(f1((senc((SUPI,pk(skUE_2),<br/>
SNname),KEMkey(Encaps(pk(skHN),rUE_2))),KEMkey(<br/>
Encaps(pk(skHN),rUE_2)))))</TD></TR></TABLE>>]
P0_3_0__7 -> P0_3_0__8 [label = <>, weight = 100]
P0_3_0__8 -> P0_3_0__9 [label = <>, weight = 100]
P0_2_0__8 -> P0_2_0__9 [label = <>, weight = 100]
P0_1_0__8 -> P0_1_0__9 [label = <>, weight = 100]
P0_0__6 -> P0_0__7 [label = <>, weight = 100]
P__3 -> P__4 [label = <>, weight = 100]
{rank = same; P__4 P0_0__7 P0_1_0__9 P0_2_0__9 P0_3_0__9}
P0_3_0__9 -> P0_3_0__10 [label = <>, weight = 100]
P__4 -> P__5 [label = <>, weight = 100]
{rank = same; P__5 P0_3_0__10}
P0_3_0__10 -> P__5 [label = <(~M_1,~M_2,~M_3,~M_4)>, arrowhead = normal]
P0_3_0__10 -> P0_3_0__11 [label = <>, weight = 100]
P0_2_0__9 -> P0_2_0__10 [label = <>, weight = 100]
P0_1_0__9 -> P0_1_0__10 [label = <>, weight = 100]
P0_0__7 -> P0_0__8 [label = <>, weight = 100]
P__5 -> P__6 [label = <>, weight = 100]
{rank = same; P__6 P0_0__8 P0_1_0__10 P0_2_0__10 P0_3_0__11}
P0_2_0__10 -> P0_2_0__11 [label = <>, weight = 100]
P0_1_0__10 -> P0_1_0__11 [label = <>, weight = 100]
P0_0__8 -> P0_0__9 [label = <>, weight = 100]
P__6 -> P__7 [label = <>, weight = 100]
{rank = same; P__7 P0_0__9 P0_1_0__11 P0_2_0__11}
P0_2_0__11 -> P0_2_0__12 [label = <>, weight = 100]
P__7 -> P__8 [label = <>, weight = 100]
{rank = same; P__8 P0_2_0__12}
P0_2_0__12 -> P__8 [label = <~X_1>, dir = back, arrowhead = normal]
P0_2_0__12 -> P0_2_0__13 [label = <>, weight = 100]
P0_1_0__11 -> P0_1_0__12 [label = <>, weight = 100]
P0_0__9 -> P0_0__10 [label = <>, weight = 100]
P__8 -> P__9 [label = <>, weight = 100]
{rank = same; P__9 P0_0__10 P0_1_0__12 P0_2_0__13}
P0_2_0__13 -> P0_2_0__14 [label = <>, weight = 100]
P0_2_0__14 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{37}</FONT><FONT COLOR="blue">new </FONT>rSN_2</TD></TR><TR><TD><FONT COLOR="darkgreen">{38}</FONT><FONT COLOR="blue">new </FONT>ssID_3</TD></TR><TR><TD><FONT COLOR="darkgreen">{39}</FONT><FONT COLOR="blue">event</FONT> SNSendReqHN(f1((senc((SUPI,pk(skUE_2),<br/>
SNname),KEMkey(Encaps(pk(skHN),rUE_2))),KEMkey(<br/>
Encaps(pk(skHN),rUE_2)))))</TD></TR></TABLE>>]
P0_2_0__14 -> P0_2_0__15 [label = <>, weight = 100]
P0_2_0__15 -> P0_2_0__16 [label = <>, weight = 100]
P0_1_0__12 -> P0_1_0__13 [label = <>, weight = 100]
{rank = same; P0_1_0__13 P0_2_0__16}
P0_2_0__16 -> P0_2_0__17 [label = <>, weight = 100]
P0_1_0__13 -> P0_1_0__14 [label = <>, weight = 100]
{rank = same; P0_1_0__14 P0_2_0__17}
P0_2_0__17 -> P0_1_0__14 [label = <~X_2>, arrowhead = normal]
P0_2_0__17 -> P0_2_0__18 [label = <>, weight = 100]
P0_1_0__14 -> P0_1_0__15 [label = <>, weight = 100]
{rank = same; P0_1_0__15 P0_2_0__18}
P0_1_0__15 -> P0_1_0__16 [label = <>, weight = 100]
P0_1_0__16 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{63}</FONT><FONT COLOR="blue">event</FONT> HNRecReqSN(f1((senc((SUPI,pk(skUE_2),<br/>
SNname),KEMkey(Encaps(pk(skHN),rUE_2))),KEMkey(<br/>
Encaps(pk(skHN),rUE_2)))))</TD></TR><TR><TD><FONT COLOR="darkgreen">{64}</FONT><FONT COLOR="blue">new </FONT>rHN_2</TD></TR><TR><TD><FONT COLOR="darkgreen">{79}</FONT><FONT COLOR="blue">event</FONT> HNSendResSN(f1((k,KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2)),rSN_2)))</TD></TR></TABLE>>]
P0_1_0__16 -> P0_1_0__17 [label = <>, weight = 100]
P0_2_0__18 -> P0_2_0__19 [label = <>, weight = 100]
P0_1_0__17 -> P0_1_0__18 [label = <>, weight = 100]
{rank = same; P0_1_0__18 P0_2_0__19}
P0_2_0__19 -> P0_2_0__20 [label = <>, weight = 100]
P0_1_0__18 -> P0_1_0__19 [label = <>, weight = 100]
{rank = same; P0_1_0__19 P0_2_0__20}
P0_2_0__20 -> P0_1_0__19 [label = <~X_3>, dir = back, arrowhead = normal]
P0_2_0__20 -> P0_2_0__21 [label = <>, weight = 100]
P0_1_0__19 -> P0_1_0__20 [label = <>, weight = 100]
{rank = same; P0_1_0__20 P0_2_0__21}
P0_2_0__21 -> P0_2_0__22 [label = <>, weight = 100]
P0_2_0__22 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{42}</FONT><FONT COLOR="blue">event</FONT> SNRecResHN(f1((k,KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2)),rSN_2)))</TD></TR></TABLE>>]
P0_2_0__22 -> P0_2_0__23 [label = <>, weight = 100]
P0_2_0__23 -> P0_2_0__24 [label = <>, weight = 100]
P0_1_0__20 -> P0_1_0__21 [label = <>, weight = 100]
P0_0__10 -> P0_0__11 [label = <>, weight = 100]
P__9 -> P__10 [label = <>, weight = 100]
{rank = same; P__10 P0_0__11 P0_1_0__21 P0_2_0__24}
P0_2_0__24 -> P0_2_0__25 [label = <>, weight = 100]
P__10 -> P__11 [label = <>, weight = 100]
{rank = same; P__11 P0_2_0__25}
P0_2_0__25 -> P__11 [label = <(~M_5,~M_6,~M_7)>, arrowhead = normal]
P0_2_0__25 -> P0_2_0__26 [label = <>, weight = 100]
P0_1_0__21 -> P0_1_0__22 [label = <>, weight = 100]
P0_0__11 -> P0_0__12 [label = <>, weight = 100]
P__11 -> P__12 [label = <>, weight = 100]
{rank = same; P__12 P0_0__12 P0_1_0__22 P0_2_0__26}
P0_3_0__11 -> P0_3_0__12 [label = <>, weight = 100]
P0_2_0__26 -> P0_2_0__27 [label = <>, weight = 100]
P0_1_0__22 -> P0_1_0__23 [label = <>, weight = 100]
P0_0__12 -> P0_0__13 [label = <>, weight = 100]
P__12 -> P__13 [label = <>, weight = 100]
{rank = same; P__13 P0_0__13 P0_1_0__23 P0_2_0__27 P0_3_0__12}
P0_3_0__12 -> P0_3_0__13 [label = <>, weight = 100]
P__13 -> P__14 [label = <>, weight = 100]
{rank = same; P__14 P0_3_0__13}
P0_3_0__13 -> P__14 [label = <(~M_5,~M_6,~M_7)>, dir = back, arrowhead = normal]
P0_3_0__13 -> P0_3_0__14 [label = <>, weight = 100]
P0_2_0__27 -> P0_2_0__28 [label = <>, weight = 100]
P0_1_0__23 -> P0_1_0__24 [label = <>, weight = 100]
P0_0__13 -> P0_0__14 [label = <>, weight = 100]
P__14 -> P__15 [label = <>, weight = 100]
{rank = same; P__15 P0_0__14 P0_1_0__24 P0_2_0__28 P0_3_0__14}
P0_3_0__14 -> P0_3_0__15 [label = <>, weight = 100]
P0_3_0__15 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{22}</FONT><FONT COLOR="blue">event</FONT> UERecResSN(f1((k,KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2)),rSN_2)))</TD></TR><TR><TD><FONT COLOR="darkgreen">{30}</FONT><FONT COLOR="blue">event</FONT> UESendConSN(keyseed((f3((k,DecapsKey(<br/>
skUE_2,KEMCipher(Encaps(pk(skUE_2),rHN_2))))),<br/>
f4((k,DecapsKey(skUE_2,KEMCipher(Encaps(pk(skUE_2),<br/>
rHN_2))))),DecapsKey(skUE_2,KEMCipher(Encaps(pk(<br/>
skUE_2),rHN_2))),f2((k,DecapsKey(skUE_2,KEMCipher(<br/>
Encaps(pk(skUE_2),rHN_2))))),SNname)))</TD></TR></TABLE>>]
P0_3_0__15 -> P0_3_0__16 [label = <>, weight = 100]
P0_3_0__16 -> P0_3_0__17 [label = <>, weight = 100]
P0_2_0__28 -> P0_2_0__29 [label = <>, weight = 100]
P0_1_0__24 -> P0_1_0__25 [label = <>, weight = 100]
P0_0__14 -> P0_0__15 [label = <>, weight = 100]
P__15 -> P__16 [label = <>, weight = 100]
{rank = same; P__16 P0_0__15 P0_1_0__25 P0_2_0__29 P0_3_0__17}
P0_3_0__17 -> P0_3_0__18 [label = <>, weight = 100]
P__16 -> P__17 [label = <>, weight = 100]
{rank = same; P__17 P0_3_0__18}
P0_3_0__18 -> P__17 [label = <~M_8>, arrowhead = normal]
P0_3_0__18 -> P0_3_0__19 [label = <>, weight = 100]
P0_2_0__29 -> P0_2_0__30 [label = <>, weight = 100]
P0_1_0__25 -> P0_1_0__26 [label = <>, weight = 100]
P0_0__15 -> P0_0__16 [label = <>, weight = 100]
P__17 -> P__18 [label = <>, weight = 100]
{rank = same; P__18 P0_0__16 P0_1_0__26 P0_2_0__30 P0_3_0__19}
P0_3_0__19 -> P0_3_0__20 [label = <>, weight = 100]
P0_2_0__30 -> P0_2_0__31 [label = <>, weight = 100]
P0_1_0__26 -> P0_1_0__27 [label = <>, weight = 100]
P0_0__16 -> P0_0__17 [label = <>, weight = 100]
P__18 -> P__19 [label = <>, weight = 100]
{rank = same; P__19 P0_0__17 P0_1_0__27 P0_2_0__31 P0_3_0__20}
P0_3_0__20 -> P0_3_0__21 [label = <>, weight = 100]
P__19 -> P__20 [label = <>, weight = 100]
{rank = same; P__20 P0_3_0__21}
P0_3_0__21 -> P__20 [label = <~M_9>, arrowhead = normal]
P0_3_0__21 -> P0_3_0__22 [label = <>, weight = 100]
P0_2_0__31 -> P0_2_0__32 [label = <>, weight = 100]
P0_1_0__27 -> P0_1_0__28 [label = <>, weight = 100]
P0_0__17 -> P0_0__18 [label = <>, weight = 100]
P__20 -> P__21 [label = <>, weight = 100]
{rank = same; P__21 P0_0__18 P0_1_0__28 P0_2_0__32 P0_3_0__22}
P0_3_0__22 -> P0_3_0__23 [label = <>, weight = 100]
P0_2_0__32 -> P0_2_0__33 [label = <>, weight = 100]
P0_1_0__28 -> P0_1_0__29 [label = <>, weight = 100]
P0_0__18 -> P0_0__19 [label = <>, weight = 100]
P__21 -> P__22 [label = <>, weight = 100]
{rank = same; P__22 P0_0__19 P0_1_0__29 P0_2_0__33 P0_3_0__23}
P0_3_0__23 -> P0_3_0__24 [label = <>, weight = 100]
P__22 -> P__23 [label = <>, weight = 100]
{rank = same; P__23 P0_3_0__24}
P0_3_0__24 -> P__23 [label = <~M_10 = debugUE>, arrowhead = normal]
P0_3_0__24 -> P0_3_0__25 [label = <>, weight = 100]
P0_2_0__33 -> P0_2_0__34 [label = <>, weight = 100]
P0_1_0__29 -> P0_1_0__30 [label = <>, weight = 100]
P0_0__19 -> P0_0__20 [label = <>, weight = 100]
P__23 -> P__24 [label = <>, weight = 100]
{rank = same; P__24 P0_0__20 P0_1_0__30 P0_2_0__34 P0_3_0__25}
P0_3_0__26 [label = "", width = 0.3, height = 0.3]
P0_3_0__25 -> P0_3_0__26 [label = <>, weight = 100]
P0_2_0__34 -> P0_2_0__35 [label = <>, weight = 100]
P0_1_0__30 -> P0_1_0__31 [label = <>, weight = 100]
P0_0__20 -> P0_0__21 [label = <>, weight = 100]
P__24 -> P__25 [label = <>, weight = 100]
{rank = same; P__25 P0_0__21 P0_1_0__31 P0_2_0__35}
P0_2_0__35 -> P0_2_0__36 [label = <>, weight = 100]
P__25 -> P__26 [label = <>, weight = 100]
{rank = same; P__26 P0_2_0__36}
P0_2_0__36 -> P__26 [label = <~M_8>, dir = back, arrowhead = normal]
P0_2_0__36 -> P0_2_0__37 [label = <>, weight = 100]
P0_1_0__31 -> P0_1_0__32 [label = <>, weight = 100]
P0_0__21 -> P0_0__22 [label = <>, weight = 100]
P__26 -> P__27 [label = <>, weight = 100]
{rank = same; P__27 P0_0__22 P0_1_0__32 P0_2_0__37}
P0_2_0__37 -> P0_2_0__38 [label = <>, weight = 100]
P0_2_0__38 [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{46}</FONT><FONT COLOR="blue">event</FONT> SNRecConUE(keyseed((f3((k,KEMkey(Encaps(<br/>
pk(skUE_2),rHN_2)))),f4((k,KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2)))),KEMkey(Encaps(pk(skUE_2),rHN_2)),f2(<br/>
(k,KEMkey(Encaps(pk(skUE_2),rHN_2)))),SNname)))<br/>
</TD></TR></TABLE>>]
P0_2_0__38 -> P0_2_0__39 [label = <>, weight = 100]
P0_2_0__39 -> P0_2_0__40 [label = <>, weight = 100]
P0_2_0__40 [color = red, shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD><FONT COLOR="darkgreen">{50}</FONT><FONT COLOR="blue">event</FONT> SNKeyObtn((keyseed((keyseed((f3((k,KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)))),f4((k,KEMkey(Encaps(<br/>
pk(skUE_2),rHN_2)))),KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2)),xor(rSN_2,f5((k,KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2))))),SNname)),SNname)),SUPI))</TD></TR></TABLE>>]
P0_2_0__40 -> P0_2_0__41 [label = <>, weight = 100]
Abbrev [shape = plaintext, label = <<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR> <TD> Abbreviations </TD></TR><TR><TD>~M_1 = KEMCipher(Encaps(pk(skHN),rUE_2))</TD></TR><TR><TD>~M_2 = senc((SUPI,pk(skUE_2),SNname),KEMkey(Encaps(<br/>
pk(skHN),rUE_2)))</TD></TR><TR><TD>~M_3 = f1((senc((SUPI,pk(skUE_2),SNname),KEMkey(Encaps(<br/>
pk(skHN),rUE_2))),KEMkey(Encaps(pk(skHN),rUE_2))))</TD></TR><TR><TD>~M_4 = idHN_3</TD></TR><TR><TD>~X_1 = (~M_1,~M_2,~M_3,a_1) = (KEMCipher(Encaps(pk(skHN),<br/>
rUE_2)),senc((SUPI,pk(skUE_2),SNname),KEMkey(Encaps(<br/>
pk(skHN),rUE_2))),f1((senc((SUPI,pk(skUE_2),SNname),<br/>
KEMkey(Encaps(pk(skHN),rUE_2))),KEMkey(Encaps(<br/>
pk(skHN),rUE_2)))),a_1)</TD></TR><TR><TD>~X_2 = (ssID_3,KEMCipher(Encaps(pk(skHN),rUE_2)),senc(<br/>
(SUPI,pk(skUE_2),SNname),KEMkey(Encaps(pk(skHN),<br/>
rUE_2))),f1((senc((SUPI,pk(skUE_2),SNname),KEMkey(<br/>
Encaps(pk(skHN),rUE_2))),KEMkey(Encaps(pk(skHN),<br/>
rUE_2)))),SNname,rSN_2)</TD></TR><TR><TD>~X_3 = (ssID_3,KEMCipher(Encaps(pk(skUE_2),rHN_2)),SHA(<br/>
(keyseed((f3((k,KEMkey(Encaps(pk(skUE_2),rHN_2)))),<br/>
f4((k,KEMkey(Encaps(pk(skUE_2),rHN_2)))),KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)),f2((k,KEMkey(Encaps(<br/>
pk(skUE_2),rHN_2)))),SNname)),rSN_2)),senc((keyseed(<br/>
(keyseed((f3((k,KEMkey(Encaps(pk(skUE_2),rHN_2)))),<br/>
f4((k,KEMkey(Encaps(pk(skUE_2),rHN_2)))),KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)),xor(rSN_2,f5((k,KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2))))),SNname)),SNname)),<br/>
SUPI),xor(keyseed((f3((k,KEMkey(Encaps(pk(skUE_2),<br/>
rHN_2)))),f4((k,KEMkey(Encaps(pk(skUE_2),rHN_2)))),<br/>
KEMkey(Encaps(pk(skUE_2),rHN_2)),f2((k,KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)))),SNname)),f5((k,KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)))))),xor(rSN_2,f5((k,<br/>
KEMkey(Encaps(pk(skUE_2),rHN_2))))),f1((k,KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)),rSN_2)),xor(f5((k,KEMkey(<br/>
Encaps(pk(skUE_2),rHN_2)))),rSN_2))</TD></TR><TR><TD>~M_5 = KEMCipher(Encaps(pk(skUE_2),rHN_2))</TD></TR><TR><TD>~M_6 = xor(rSN_2,f5((k,KEMkey(Encaps(pk(skUE_2),rHN_2)))))</TD></TR><TR><TD>~M_7 = f1((k,KEMkey(Encaps(pk(skUE_2),rHN_2)),rSN_2))</TD></TR><TR><TD>~M_8 = keyseed((f3((k,DecapsKey(skUE_2,KEMCipher(<br/>
Encaps(pk(skUE_2),rHN_2))))),f4((k,DecapsKey(skUE_2,<br/>
KEMCipher(Encaps(pk(skUE_2),rHN_2))))),DecapsKey(<br/>
skUE_2,KEMCipher(Encaps(pk(skUE_2),rHN_2))),f2(<br/>
(k,DecapsKey(skUE_2,KEMCipher(Encaps(pk(skUE_2),<br/>
rHN_2))))),SNname))</TD></TR><TR><TD>~M_9 = senc(kseafUE,keyseed((keyseed((f3((k,DecapsKey(<br/>
skUE_2,KEMCipher(Encaps(pk(skUE_2),rHN_2))))),<br/>
f4((k,DecapsKey(skUE_2,KEMCipher(Encaps(pk(skUE_2),<br/>
rHN_2))))),DecapsKey(skUE_2,KEMCipher(Encaps(pk(<br/>
skUE_2),rHN_2))),xor(rSN_2,f5((k,KEMkey(Encaps(<br/>
pk(skUE_2),rHN_2))))),SNname)),SNname)))</TD></TR></TABLE>>]Abbrev -> P__0 [style = invisible, weight =100]}